  steps:
  
  - script: '/usr/bin/xcodebuild -version'
    displayName: 'Show Xcode Version' 
    
  - script: 'xcode-select -p'
    displayName: 'Show current xcode-select path'
    
  - script: 'sudo rm -rf /Applications/Xcode.app'
    displayName: 'Remove Xcode.app symlink due Xamarin.Mac/iOS bug'
    
#   - script: 'sudo mv /Applications/Xcode_12.app /Applications/Old_Xcode_12.app'
#     displayName: 'Rename Xcode_12.app to avoid someone using the old Xcode'
    
    ## Update this section to newer versions of Xcode (e.g 14.3)
    ## Check Xcode path on ADO here: https://github.com/actions/virtual-environments/blob/main/images/macos/macos-12-Readme.md
    
  - script: 'sudo mv /Applications/Xcode_14.2.app /Applications/Xcode.app'
    displayName: 'Move Xcode.app Xcode_14.2 to /Applications/Xcode.app'
    
  - script: 'sudo xcode-select -s /Applications/Xcode.app/Contents/Developer'
    displayName: 'Ensure xcode-select point to /Applications/Xcode.app'
    
  - script: '/usr/bin/xcodebuild -version'
    displayName: 'Show Xcode Version'
    
  - script: 'xcode-select -p'
    displayName: 'Show current xcode-select path'
   
  - script: 'cat /Users/runner/Library/Preferences/Xamarin/Settings.plist'
    displayName: 'cat /Users/runner/Library/Preferences/Xamarin/Settings.plist'
    
  - script: '/usr/libexec/PlistBuddy -c "Set :AppleSdkRoot /Applications/Xcode.app" /Users/runner/Library/Preferences/Xamarin/Settings.plist'
    displayName: 'Set Preferences/Xamarin/Settings'
  
  - script: 'cat /Users/runner/Library/Preferences/Xamarin/Settings.plist'
    displayName: 'cat /Users/runner/Library/Preferences/Xamarin/Settings.plist'
    
  - task: InstallAppleCertificate@2
    inputs:
      certSecureFile: 'Distribution.p12'
      certPwd: '$(CertificatePwd)'
      keychain: 'temp'
  
  - task: InstallAppleCertificate@2
    inputs:
      certSecureFile: 'DeveloperIDApplication.p12'
      certPwd: '$(CertificatePwd)'
      keychain: 'temp'

  - task: InstallAppleCertificate@2
    inputs:
      certSecureFile: 'Development.p12'
      certPwd: '$(CertificatePwd)'
      keychain: 'temp'
      
  - task: InstallAppleCertificate@2
    inputs:
      certSecureFile: 'MacInstallerDistribution.p12'
      certPwd: '$(CertificatePwd)'
      keychain: 'temp'

  - task: InstallAppleProvisioningProfile@1
    inputs:
      provisioningProfileLocation: 'secureFiles'
      provProfileSecureFile: 'AppStore.mobileprovision'

  - task: InstallAppleProvisioningProfile@1
    inputs:
      provisioningProfileLocation: 'secureFiles'
      provProfileSecureFile: 'Development.mobileprovision'

  - task: InstallAppleProvisioningProfile@1
    inputs:
      provisioningProfileLocation: 'secureFiles'
      provProfileSecureFile: 'MacAppStore.provisionprofile'

  - task: InstallAppleProvisioningProfile@1
    inputs:
      provisioningProfileLocation: 'secureFiles'
      provProfileSecureFile: 'tvOS_Development.mobileprovision'

  - task: InstallAppleProvisioningProfile@1
    inputs:
      provisioningProfileLocation: 'secureFiles'
      provProfileSecureFile: 'tvOSAppStore.mobileprovision'
      
  - task: JavaToolInstaller@0
    displayName: install JDK 11
    inputs:
      versionSpec: '11'
      jdkArchitectureOption: 'x64'
      jdkSourceOption: 'PreInstalled'
      
  # Install Mono
  - task: CmdLine@2
    displayName: 'Provisioning Mono SDK'
    inputs:
      script: 'cd ~;
              curl -OL https://download.mono-project.com/archive/6.12.0/macos-10-universal/MonoFramework-MDK-6.12.0.190.macos10.xamarin.universal.pkg;
              sudo installer -pkg ~/MonoFramework-MDK-6.12.0.190.macos10.xamarin.universal.pkg -target /'

  # Azure DevOps hosted pool is still using an old version of Xamarin.iOS, 
  # so we will upgrade
  - task: CmdLine@2
    displayName: 'Provisioning Xamarin.iOS'
    inputs:
      script: 'cd ~;
              curl -OL https://download.visualstudio.microsoft.com/download/pr/cc89cd8e-a615-4d98-8783-8b932996a8fd/8be868ae2c77e0054acb14b1b111dbbb/xamarin.ios-16.2.0.6.pkg;
              sudo installer -pkg ~/xamarin.ios-16.2.0.6.pkg -target /'

  - task: CmdLine@2
    displayName: 'Provisioning Xamarin.Mac'
    inputs:
      script: 'cd ~;
              curl -OL https://download.visualstudio.microsoft.com/download/pr/cc89cd8e-a615-4d98-8783-8b932996a8fd/8cbf19fbf7e11a522aff3ae4a9f5b1d0/xamarin.mac-9.1.0.6.pkg;
              sudo installer -pkg ~/xamarin.mac-9.1.0.6.pkg -target /'

  - task: CmdLine@2
    displayName: 'Provisioning Xamarin.Android'
    inputs:
      script: 'cd ~;
              curl -OL https://dl.internalx.com/vsts-devdiv/Xamarin.Android/public/7254843/d17-5/a200af12c1e846626b8caebd926ac14c185f71ec/xamarin.android-13.2.0.6.pkg;
              sudo installer -pkg ~/xamarin.android-13.2.0.6.pkg -target /'

  # Install GitVersion
  - script: curl -OL https://github.com/GitTools/GitVersion/releases/download/5.12.0/gitversion-osx-x64-5.12.0.tar.gz &&
            tar -xvf gitversion-osx-x64-5.12.0.tar.gz &&
            mv gitversion /usr/local/bin
    displayName: 'Install GitVersion 5.12.0'

  # Print the current version of Xamarin.iOS
  - task: CmdLine@2
    displayName: 'Show Xamarin.iOS Version'
    inputs:
      script: '/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/bin/mtouch --version'
  
  - script: 'dotnet workload install android ios macos tvos maccatalyst'
    displayName: 'Install .NET 7.0 Android/iOS/macOS/tvOS/MacCatalyst'

  - script: 'sudo dotnet workload update'
    displayName: 'Update .NET 7.0 workloads'
