  steps:

  - script: '/usr/bin/xcodebuild -version'
    displayName: 'Show Xcode Version' 
    
  - script: 'xcode-select -p'
    displayName: 'Show current xcode-select path'
    
  - script: 'sudo rm -rf /Applications/Xcode.app'
    displayName: 'Remove Xcode.app symlink due Xamarin.Mac/iOS bug'
    
#   - script: 'sudo mv /Applications/Xcode_12.app /Applications/Old_Xcode_12.app'
#     displayName: 'Rename Xcode_12.app to avoid someone using the old Xcode'
    
    ## Update this section to newer versions of Xcode (e.g 14.3)
    ## Check Xcode path on ADO here: https://github.com/actions/virtual-environments/blob/main/images/macos/macos-12-Readme.md
    
  - script: 'sudo mv /Applications/Xcode_15.4.app /Applications/Xcode.app'
    displayName: 'Move Xcode_15.4.app to /Applications/Xcode.app'
    
  - script: 'sudo xcode-select -s /Applications/Xcode.app/Contents/Developer'
    displayName: 'Ensure xcode-select point to /Applications/Xcode.app'
    
  - script: '/usr/bin/xcodebuild -version'
    displayName: 'Show Xcode Version'
    
  - script: 'xcode-select -p'
    displayName: 'Show current xcode-select path'
   
  - task: InstallAppleCertificate@2
    inputs:
      certSecureFile: 'Distribution.p12'
      certPwd: '$(CertificatePwd)'
      keychain: 'temp'
  
  - task: InstallAppleCertificate@2
    inputs:
      certSecureFile: 'DeveloperIDApplication.p12'
      certPwd: '$(CertificatePwd)'
      keychain: 'temp'

  - task: InstallAppleCertificate@2
    inputs:
      certSecureFile: 'Development.p12'
      certPwd: '$(CertificatePwd)'
      keychain: 'temp'
      
  - task: InstallAppleCertificate@2
    inputs:
      certSecureFile: 'MacInstallerDistribution.p12'
      certPwd: '$(CertificatePwd)'
      keychain: 'temp'

  - task: InstallAppleProvisioningProfile@1
    inputs:
      provisioningProfileLocation: 'secureFiles'
      provProfileSecureFile: 'AppStore.mobileprovision'

  - task: InstallAppleProvisioningProfile@1
    inputs:
      provisioningProfileLocation: 'secureFiles'
      provProfileSecureFile: 'Development.mobileprovision'

  - task: InstallAppleProvisioningProfile@1
    inputs:
      provisioningProfileLocation: 'secureFiles'
      provProfileSecureFile: 'MacAppStore.provisionprofile'

  - task: InstallAppleProvisioningProfile@1
    inputs:
      provisioningProfileLocation: 'secureFiles'
      provProfileSecureFile: 'tvOS_Development.mobileprovision'

  - task: InstallAppleProvisioningProfile@1
    inputs:
      provisioningProfileLocation: 'secureFiles'
      provProfileSecureFile: 'tvOSAppStore.mobileprovision'
      
  - task: JavaToolInstaller@0
    displayName: install JDK 11
    inputs:
      versionSpec: '11'
      jdkArchitectureOption: 'x64'
      jdkSourceOption: 'PreInstalled'
      
  # Install Mono
  - task: CmdLine@2
    displayName: 'Provisioning Mono SDK'
    inputs:
      script: 'cd ~;
              curl -OL https://download.mono-project.com/archive/6.12.0/macos-10-universal/MonoFramework-MDK-6.12.0.206.macos10.xamarin.universal.pkg;
              sudo installer -pkg ~/MonoFramework-MDK-6.12.0.206.macos10.xamarin.universal.pkg -target /'

  # Azure DevOps hosted pool is still using an old version of Xamarin.iOS, 
  # Get Xamarin pkg URL at ~/Library/Caches/VisualStudio/17.0/TempDownload/index.html
  # so we will upgrade
  - task: CmdLine@2
    displayName: 'Provisioning Xamarin.iOS'
    inputs:
      script: 'cd ~;
              curl -OL https://github.com/codefoco/AzureDevopsTemplates/releases/download/v1.0/xamarin.ios-17.5.0.18.pkg;
              sudo installer -pkg ~/xamarin.ios-17.5.0.18.pkg  -target /'

  - task: CmdLine@2
    displayName: 'Provisioning Xamarin.Mac'
    inputs:
      script: 'cd ~;
              curl -OL https://github.com/codefoco/AzureDevopsTemplates/releases/download/v1.0/xamarin.mac-9.5.0.18.pkg;
              sudo installer -pkg ~/xamarin.mac-9.5.0.18.pkg -target /'

  - task: CmdLine@2
    displayName: 'Provisioning Xamarin.Android'
    inputs:
      script: 'cd ~;
              curl -OL https://download.visualstudio.microsoft.com/download/pr/8cbf56b1-ef0d-466f-8cfe-fae4ba8c5080/e9e853fee3169b1c5128098942f19120/xamarin.android-13.2.2.0.pkg;
              sudo installer -pkg ~/xamarin.android-13.2.2.0.pkg -target /'

  # Install GitVersion
  - script: curl -OL https://github.com/GitTools/GitVersion/releases/download/5.12.0/gitversion-osx-x64-5.12.0.tar.gz &&
            tar -xvf gitversion-osx-x64-5.12.0.tar.gz &&
            mv gitversion /usr/local/bin
    displayName: 'Install GitVersion 5.12.0'

  # Print the current version of Xamarin.iOS
  - task: CmdLine@2
    displayName: 'Show Xamarin.iOS Version'
    inputs:
      script: '/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/bin/mtouch --version'

  - script: 'dotnet --info'
    displayName: 'dotnet --info'

  - script: 'dotnet workload install android ios macos tvos maccatalyst maui --skip-sign-check --no-cache --disable-parallel --skip-manifest-update -v d'
    displayName: 'dotnet workload install android ios macos tvos maccatalyst maui'

  # - script: | 
  #           echo { >> 8.0.100.json
  #           echo '    "microsoft.net.sdk.macos": "14.2.8053/8.0.100",' >> 8.0.100.json
  #           echo '    "microsoft.net.sdk.ios": "17.2.8053/8.0.100",' >> 8.0.100.json
  #           echo '    "microsoft.net.sdk.maccatalyst": "17.2.8053/8.0.100",' >> 8.0.100.json
  #           echo '    "microsoft.net.sdk.maui": "8.0.21/8.0.100",' >> 8.0.100.json
  #           echo '    "microsoft.net.sdk.tvos": "17.2.8053/8.0.100",' >> 8.0.100.json
  #           echo '    "microsoft.net.sdk.android": "34.0.95/8.0.100" ' >> 8.0.100.json
  #           echo } >> 8.0.100.json
  #   displayName: 'Create 8.0.100.json'

  # - script: 'dotnet workload update --no-cache --from-rollback-file 8.0.100.json -v d'
  #   displayName: 'dotnet workload update --no-cache --from-rollback-file 8.0.100.json -v d'
    
  - script: 'dotnet --info'
    displayName: 'dotnet --info'

  - script: 'dotnet workload clean'
    displayName: 'dotnet workload clean #1'
