steps:
- task: SendTelegramNotification@0
  condition: in(variables['Agent.JobStatus'], 'SucceededWithIssues')
  inputs:
    botToken: '$(botToken)'
    chats: '$(chatId)'
    taskStatus: false
    message: |
            ‚ö†Ô∏è <b>Warning!</b>  <a href="$(Build.Repository.Uri)">$(Build.DefinitionName)</a> (<code>$(Build.SourceBranchName)</code>)
            <br> Job: <i>$(Agent.JobName)</i> - <u>$(Agent.OS) $(Agent.OSArchitecture)</u>
            <pre>$(Build.SourceVersion)</pre>
            $(Build.SourceVersionMessage) by $(Build.QueuedBy)

- task: SendTelegramNotification@0
  condition: in(variables['Agent.JobStatus'], 'Failed')
  inputs:
    botToken: '$(botToken)'
    chats: '$(chatId)'
    taskStatus: false
    buildQueuedBy: false
    message: |
            ‚ùå <b>Fail!</b>  <a href="$(Build.Repository.Uri)">$(Build.DefinitionName)</a> (<code>$(Build.SourceBranchName)</code>)
            <br> Job: <i>$(Agent.JobName)</i> - <u>$(Agent.OS) $(Agent.OSArchitecture)</u>
            <pre>$(Build.SourceVersion)</pre>
            $(Build.SourceVersionMessage) by $(Build.QueuedBy)

- task: SendTelegramNotification@0
  condition: in(variables['Agent.JobStatus'], 'Canceled')
  inputs:
    botToken: '$(botToken)'
    chats: '$(chatId)'
    taskStatus: false
    buildQueuedBy: false
    message: |
            üõë <b>Canceled!</b>  <a href="$(Build.Repository.Uri)">$(Build.DefinitionName)</a> (<code>$(Build.SourceBranchName)</code>)
            <br> Job: <i>$(Agent.JobName)</i> - <u>$(Agent.OS) $(Agent.OSArchitecture)</u>
            <pre>$(Build.SourceVersion)</pre>
            $(Build.SourceVersionMessage) by $(Build.QueuedBy)
            
- task: SendTelegramNotification@0
  condition: in(variables['Agent.JobStatus'], 'Succeeded')
  inputs:
    botToken: '$(botToken)'
    chats: '$(chatId)'
    taskStatus: false
    buildQueuedBy: false
    message: |
            ‚úÖ <b>Success!</b>  <a href="$(Build.Repository.Uri)">$(Build.DefinitionName)</a> (<code>$(Build.SourceBranchName)</code>)
            <br> Job: <i>$(Agent.JobName)</i> - <u>$(Agent.OS) $(Agent.OSArchitecture)</u>
            <pre>$(Build.SourceVersion)</pre>
            $(Build.SourceVersionMessage) by $(Build.QueuedBy)
